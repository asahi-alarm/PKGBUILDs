# Maintainer: Jos Dehaes <jos.dehaes@gmail.com>
# Maintainer: Matthias Kurz <m.kurz@irregular.at>

highmem=1

pkgname=(mesa-asahi mesa-asahi-fex-emu-overlay-x86_64 mesa-asahi-fex-emu-overlay-i386 mesa-asahi-dummy)
pkgdesc="An open-source implementation of the OpenGL specification"
_asahiver=20241211
_commit=asahi-$_asahiver
pkgver=25.0.0_pre$_asahiver
pkgrel=6
arch=('x86_64' 'aarch64')
makedepends=('python-mako' 'libxml2' 'libx11' 'xorgproto' 'libdrm' 'libxshmfence' 'libxxf86vm'
  'libxdamage' 'libvdpau' 'libva' 'wayland' 'wayland-protocols' 'zstd' 'elfutils' 'llvm' 'spirv-llvm-translator'
  'libomxil-bellagio' 'libclc' 'clang' 'libglvnd' 'libunwind' 'lm_sensors' 'libxrandr'
  'systemd' 'valgrind' 'glslang' 'vulkan-icd-loader' 'directx-headers' 'cmake' 'meson' 'python-pycparser' 'python-packaging' 'python-pyaml'
  'erofs-utils' 'lz4' 'patchelf' 'rust-bindgen')

# to build the 32 bit overlay you need these on the host machine
#    'lib32-llvm' 'lib32-llvm-libs' 'lib32-libpciaccess' 'lib32-libglvnd' 'lib32-libxrandr' 'lib32-spirv-tools'
#    'lib32-spirv-llvm-translator' 'lib32-clang' 'lib32-libxfixes' 'lib32-libvdpau' 'lib32-libva' 'lib32-xcb-util-keysyms'

depends=('egl-wayland' 'libdrm' 'wayland' 'libxxf86vm' 'libxdamage' 'libxshmfence' 'libelf' 'libomxil-bellagio'
  'libunwind' 'llvm-libs' 'lm_sensors' 'libglvnd' 'zstd' 'vulkan-icd-loader')
optdepends=('vulkan-mesa-layers: additional vulkan layers')
url="https://www.mesa3d.org/"
license=('MIT AND BSD-3-Clause AND SGI-B-2.0')
options=('!debug' '!lto')
source=(
  https://gitlab.freedesktop.org/asahi/mesa/-/archive/$_commit/mesa-$_commit.tar.gz
  Mesa-MLAA-License-Clarification-Email.txt
  gnome-shell-glthread-disable.patch
)
sha512sums=(
  '3cffd24548a3303ad318f6ddf9a39d908c503090b1dcc389e4636565e27cdc69a7da28781d59bda092a07918863ac1938f34232b1554545ec5996cbcccaadab2'
  'ecdabad21a86f04d51ba709a90fbeccb3004c6e8af3546edc530dcb4727787ed5d6a63043b6ab50b4c0a46de0894b6f3c594101b4d25f7831dee9f33fd2a7e31'
  'db08a07a6ee8cc09ae827688089e1e1e7aa2c43f9a1a9260012206052bcb9432d1c1a90657bc86618719632ba6cbb4502003c181321bc01c713f4e02dae8b4f1'
)

prepare() {
  cd mesa-$_commit

  chmod -Rf a+rX,u+w,g-w,o-w .

  cat ../gnome-shell-glthread-disable.patch |
  patch -p1 -s --fuzz=0 --no-backup-if-mismatch -f

  # patch VERSION to contain the asahi tag name
  sed -i "s/devel/asahi${_asahiver}/" VERSION
}

meson_build() {
  # We've gotten a report that enabling LTO for mesa breaks some games. See
  # https://bugzilla.redhat.com/show_bug.cgi?id=1862771 for details.
  # Disable LTO for now (b_lto)
  meson mesa-$_commit $BUILDDIR $CROSS \
    --prefix=/usr \
    --libdir=$LIBDIR \
    --libexecdir=$LIBDIR \
    --sbindir=bin \
    --buildtype=release \
    -Db_ndebug=true \
    -Db_lto=false \
    -Dplatforms=x11,wayland \
    -Dosmesa=true \
    -Dgallium-drivers=swrast,virgl,zink,asahi \
    -Dgallium-vdpau=enabled \
    -Dgallium-va=enabled \
    -Dgallium-xa=disabled \
    -Dgallium-nine=true \
    -Dteflon=$TEFLON \
    -Dgallium-opencl=icd \
    -Dgallium-rusticl=true \
    -Dvulkan-drivers=swrast,asahi \
    -Dvulkan-layers=device-select \
    -Dshared-glapi=enabled \
    -Dgles1=enabled \
    -Dgles2=enabled \
    -Dopengl=true \
    -Dgbm=enabled \
    -Dglx=dri \
    -Degl=enabled \
    -Dglvnd=enabled \
    -Dintel-rt=disabled \
    -Dmicrosoft-clc=disabled \
    -Dllvm=enabled \
    -Dshared-llvm=enabled \
    -Dvalgrind=disabled \
    -Dbuild-tests=false \
    -Dselinux=true \
    -Dandroid-libbacktrace=disabled \
    -Dglx-read-only-text=$GLX_READ_ONLY_TEXT \

  # Print config
  meson configure --no-pager $BUILDDIR

  ninja -C $BUILDDIR
  meson compile -C $BUILDDIR

  # fake installation to be seperated into packages
  # outside of fakeroot but mesa doesn't need to chown/mod
  DESTDIR="${srcdir}/fakeinstall" meson install -C $BUILDDIR
}

build() {
  # Build only minimal debug info to reduce size
  CFLAGS+=' -g1'
  CXXFLAGS+=' -g1'
  CROSS=''
  LIBDIR=lib
  TEFLON='true'
  GLX_READ_ONLY_TEXT='false'
  BUILDDIR=build

  meson_build
}

_install() {
  local src f dir
  for src; do
    f="${src#fakeinstall/}"
    # If $f contains no slash (=directly in the root), then return empty string, otherwise parent folder (removing last /*)
    dir="${pkgdir}/$([[ "$f" == */* ]] && printf "%s" "${f%/*}" || printf "")"
    install -m755 -d "${dir}"
    mv -v "${src}" "${dir}/"
  done
}

package_mesa-asahi() {
  provides=('mesa-libgl' 'opengl-driver' 'mesa' 'vulkan-asahi' 'vulkan-driver' 'opencl-driver' 'opencl-rusticl-mesa')
  conflicts=('mesa-libgl' 'mesa' 'mesa-asahi-edge' 'vulkan-swrast')
  replaces=('mesa-asahi-edge')

  if [[ "$CARCH" == "x86_64" ]]; then
    return 0
  fi

  LIBDIR=lib

  # libvdpau opens the versioned name, don't bother including the unversioned
  rm -vf fakeinstall/usr/lib/vdpau/*.so
  # likewise glvnd
  rm -vf fakeinstall/usr/lib/libGLX_mesa.so
  rm -vf fakeinstall/usr/lib/libEGL_mesa.so
  # XXX can we just not build this
  rm -vf fakeinstall/usr/lib/libGLES*

  # glvnd needs a default provider for indirect rendering where it cannot
  # determine the vendor
  ln -s /usr/lib/libGLX_mesa.so.0 fakeinstall/usr/lib/libGLX_system.so.0

  # this keeps breaking, check it early.  note that the exit from eu-ftr is odd.
  pushd fakeinstall/usr/lib
  for i in libOSMesa*.so libGL.so ; do
      eu-findtextrel $i && exit 1
  done
  popd

  # filesystem
  install -Dpm0755 -t ${pkgdir}/usr/share/doc/mesa-asahi/ Mesa-MLAA-License-Clarification-Email.txt
  install -m755 -d ${pkgdir}/usr/lib/dri
  install -m755 -d ${pkgdir}/usr/share/drirc.d

  # libGL
  _install fakeinstall/usr/lib/libGLX_mesa.so.0*
  _install fakeinstall/usr/lib/libGLX_system.so.0*

  # libEGL
  _install fakeinstall/usr/share/glvnd/egl_vendor.d/50_mesa.json
  _install fakeinstall/usr/lib/libEGL_mesa.so.0*

  # libglapi
  _install fakeinstall/usr/lib/libglapi.so.0
  _install fakeinstall/usr/lib/libglapi.so.0.*

  # libOSMesa
  _install fakeinstall/usr/lib/libOSMesa.so.8*

  # libgbm
  _install fakeinstall/usr/lib/libgbm.so.1
  _install fakeinstall/usr/lib/libgbm.so.1.*

  # libTeflon
  _install fakeinstall/usr/lib/libteflon.so

  # libOpenCL
  _install fakeinstall/usr/lib/libMesaOpenCL.so.*
  _install fakeinstall/usr/lib/libRusticlOpenCL.so.*
  _install fakeinstall/etc/OpenCL/vendors/mesa.icd
  _install fakeinstall/etc/OpenCL/vendors/rusticl.icd

  # libd3d
  install -m755 -d ${pkgdir}/usr/lib/d3d/
  _install fakeinstall/usr/lib/d3d/*.so.*

  # dri-drivers
  _install fakeinstall/usr/lib/gbm/dri_gbm.so
  _install fakeinstall/usr/share/drirc.d/00-mesa-defaults.conf
  _install fakeinstall/usr/lib/libgallium-*.so
  _install fakeinstall/usr/lib/dri/kms_swrast_dri.so
  _install fakeinstall/usr/lib/dri/libdril_dri.so
  _install fakeinstall/usr/lib/dri/swrast_dri.so
  _install fakeinstall/usr/lib/dri/virtio_gpu_dri.so

  _install fakeinstall/usr/lib/dri/apple_dri.so
  _install fakeinstall/usr/lib/dri/asahi_dri.so
  _install fakeinstall/usr/lib/dri/ingenic-drm_dri.so
  _install fakeinstall/usr/lib/dri/imx-drm_dri.so
  _install fakeinstall/usr/lib/dri/imx-lcdif_dri.so
  _install fakeinstall/usr/lib/dri/kirin_dri.so
  _install fakeinstall/usr/lib/dri/komeda_dri.so
  _install fakeinstall/usr/lib/dri/mali-dp_dri.so
  _install fakeinstall/usr/lib/dri/mcde_dri.so
  _install fakeinstall/usr/lib/dri/mxsfb-drm_dri.so
  _install fakeinstall/usr/lib/dri/rcar-du_dri.so
  _install fakeinstall/usr/lib/dri/stm_dri.so
  install -m755 -d ${pkgdir}/usr/lib/gallium-pipe
  _install fakeinstall/usr/lib/gallium-pipe/*.so
  _install fakeinstall/usr/lib/dri/armada-drm_dri.so
  _install fakeinstall/usr/lib/dri/exynos_dri.so
  _install fakeinstall/usr/lib/dri/gm12u320_dri.so
  _install fakeinstall/usr/lib/dri/hdlcd_dri.so
  _install fakeinstall/usr/lib/dri/hx8357d_dri.so
  _install fakeinstall/usr/lib/dri/ili9163_dri.so
  _install fakeinstall/usr/lib/dri/ili9225_dri.so
  _install fakeinstall/usr/lib/dri/ili9341_dri.so
  _install fakeinstall/usr/lib/dri/ili9486_dri.so
  _install fakeinstall/usr/lib/dri/imx-dcss_dri.so
  _install fakeinstall/usr/lib/dri/mediatek_dri.so
  _install fakeinstall/usr/lib/dri/meson_dri.so
  _install fakeinstall/usr/lib/dri/mi0283qt_dri.so
  _install fakeinstall/usr/lib/dri/panel-mipi-dbi_dri.so
  _install fakeinstall/usr/lib/dri/pl111_dri.so
  _install fakeinstall/usr/lib/dri/repaper_dri.so
  _install fakeinstall/usr/lib/dri/rockchip_dri.so
  _install fakeinstall/usr/lib/dri/rzg2l-du_dri.so
  _install fakeinstall/usr/lib/dri/ssd130x_dri.so
  _install fakeinstall/usr/lib/dri/st7586_dri.so
  _install fakeinstall/usr/lib/dri/st7735r_dri.so
  _install fakeinstall/usr/lib/dri/sti_dri.so
  _install fakeinstall/usr/lib/dri/sun4i-drm_dri.so
  _install fakeinstall/usr/lib/dri/udl_dri.so
  _install fakeinstall/usr/lib/dri/vkms_dri.so
  _install fakeinstall/usr/lib/dri/zynqmp-dpsub_dri.so
  _install fakeinstall/usr/lib/dri/zink_dri.so

  # va-drivers
  _install fakeinstall/usr/lib/dri/virtio_gpu_drv_video.so

  # vdpau-drivers
  install -m755 -d ${pkgdir}/usr/lib/vdpau
  _install fakeinstall/usr/lib/vdpau/libvdpau_virtio_gpu.so.1*

  # vulkan-drivers
  _install fakeinstall/usr/lib/libvulkan_lvp.so
  _install fakeinstall/usr/share/vulkan/icd.d/lvp_icd.*.json
  _install fakeinstall/usr/lib/libVkLayer_MESA_device_select.so
  _install fakeinstall/usr/share/vulkan/implicit_layer.d/VkLayer_MESA_device_select.json
  _install fakeinstall/usr/lib/libvulkan_asahi.so
  _install fakeinstall/usr/share/vulkan/icd.d/asahi_icd.*.json
}

create_overlay() {
  OVERLAY_NAME=$1

  # libvdpau opens the versioned name, don't bother including the unversioned
  rm -vf fakeinstall/usr/$LIBDIR/vdpau/*.so
  # likewise glvnd
  rm -vf fakeinstall/usr/$LIBDIR/libGLX_mesa.so
  rm -vf fakeinstall/usr/$LIBDIR/libEGL_mesa.so
  # XXX can we just not build this
  rm -vf fakeinstall/usr/$LIBDIR/libGLES*

  # glvnd needs a default provider for indirect rendering where it cannot
  # determine the vendor
  ln -s /usr/$LIBDIR/libGLX_mesa.so.0 fakeinstall/usr/$LIBDIR/libGLX_system.so.0

  # this keeps breaking, check it early.  note that the exit from eu-ftr is odd.
  pushd fakeinstall/usr/$LIBDIR
  for i in libOSMesa*.so libGL.so ; do
      eu-findtextrel $i && exit 1
  done
  popd

  mkdir -p fexov

  # Note: In order to effectively white-out the underlying RootFS Mesa's
  # drivers, we install files into alternately named sub-directories and
  # then symlink them to the original name. This hides the entire original
  # directory in the underlying RootFS.

  install -Dpm0755 -s -t "fexov/usr/$LIBDIR/" \
    fakeinstall/usr/$LIBDIR/libgallium-*.so
  install -Dpm0755 -s -t "fexov/usr/$LIBDIR/ovl_dri/" \
    fakeinstall/usr/$LIBDIR/dri/libdril_dri.so
  ln -s libdril_dri.so "fexov/usr/$LIBDIR/ovl_dri/apple_dri.so"
  ln -s libdril_dri.so "fexov/usr/$LIBDIR/ovl_dri/asahi_dri.so"
  ln -s ovl_dri "fexov/usr/$LIBDIR/dri"

  install -Dpm0755 -s -t "fexov/usr/$LIBDIR/" \
    fakeinstall/usr/$LIBDIR/libEGL_mesa.so.0.0.0 \
    fakeinstall/usr/$LIBDIR/libGLX_mesa.so.0.0.0 \
    fakeinstall/usr/$LIBDIR/libglapi.so.0.0.0
  ln -s libEGL_mesa.so.0.0.0 "fexov/usr/$LIBDIR/libEGL_mesa.so.0"
  ln -s libGLX_mesa.so.0.0.0 "fexov/usr/$LIBDIR/libGLX_mesa.so.0"
  ln -s libglapi.so.0.0.0 "fexov/usr/$LIBDIR/libglapi.so.0"
  ln -s libGLX_mesa.so.0 "fexov/usr/$LIBDIR/libGLX_system.so.0"

  install -Dpm0755 -s -t "fexov/usr/$LIBDIR/" \
    fakeinstall/usr/$LIBDIR/libRusticlOpenCL.so.1.0.0
  ln -s libRusticlOpenCL.so.1.0.0 fexov/usr/$LIBDIR/libRusticlOpenCL.so.1
  install -Dpm0644 -t "fexov/etc/OpenCL/ovl_vendors/" \
    fakeinstall/etc/OpenCL/vendors/rusticl.icd
  ln -s ovl_vendors "fexov/etc/OpenCL/vendors"

  install -Dpm0755 -s -t "fexov/usr/$LIBDIR/" \
    fakeinstall/usr/$LIBDIR/libvulkan_asahi.so \
    fakeinstall/usr/$LIBDIR/libVkLayer_MESA_device_select.so

  install -Dpm0644 -t "fexov/usr/share/vulkan/ovl_icd.d/" \
    fakeinstall/usr/share/vulkan/icd.d/asahi_icd.*.json
  install -Dpm0644 -t "fexov/usr/share/vulkan/implicit_layer.d/" \
    fakeinstall/usr/share/vulkan/implicit_layer.d/VkLayer_MESA_device_select.json
  ln -s ovl_icd.d "fexov/usr/share/vulkan/icd.d"

  install -Dpm0755 -s -t "fexov/usr/$LIBDIR/" \
    fakeinstall/usr/$LIBDIR/libgbm.so.1.0.0
  install -Dpm0755 -s -t "fexov/usr/$LIBDIR/gbm/" \
    fakeinstall/usr/$LIBDIR/gbm/dri_gbm.so

  install -Dpm0644 -t "fexov/usr/share/glvnd/ovl_egl_vendor.d/" \
    fakeinstall/usr/share/glvnd/egl_vendor.d/50_mesa.json
  ln -s ovl_egl_vendor.d "fexov/usr/share/glvnd/egl_vendor.d"

  # Hack to work around libcapsule bug:
  # https://github.com/ValveSoftware/steam-runtime/issues/704
  #
  # The FEX overlays do not update ld.so.cache, so ld.so falls back
  # to the system library paths. This works fine for ld.so since
  # the dependencies are indeed in /usr/$LIBDIR[64], but libcapsule
  # has the fallback harcoded to /lib:/usr/$LIBDIR, which fails on
  # x86_64 systems.
  patchelf --add-rpath /usr/$LIBDIR "fexov/usr/$LIBDIR/gbm/dri_gbm.so"
  patchelf --add-rpath /usr/$LIBDIR "fexov/usr/$LIBDIR/libGLX_mesa.so.0.0.0"
  patchelf --add-rpath /usr/$LIBDIR "fexov/usr/$LIBDIR/libEGL_mesa.so.0.0.0"
  patchelf --add-rpath /usr/$LIBDIR "fexov/usr/$LIBDIR/libRusticlOpenCL.so.1.0.0"

  #dnl erofs  ----------------------------
  mkfs.erofs -z lz4 $OVERLAY_NAME fexov
}

package_mesa-asahi-fex-emu-overlay-x86_64() {
  arch=(any)
  provides=('mesa-asahi-fex-emu-overlay-x86_64')

  if [[ "$CARCH" != "x86_64" ]]; then
    return 0
  fi

  rm -rf fexov
  LIBDIR=lib
  create_overlay mesa-x86_64.erofs
  install -Dpm0644 -t ${pkgdir}/usr/share/fex-emu/overlays/ mesa-x86_64.erofs

  install -Dpm0755 -t ${pkgdir}/usr/share/doc/mesa-asahi-fex-emu-overlay-x86_64/ Mesa-MLAA-License-Clarification-Email.txt
}

package_mesa-asahi-fex-emu-overlay-i386() {
  arch=(any)
  provides=('mesa-asahi-fex-emu-overlay-i386')

  if [[ "$CARCH" != "x86_64" ]]; then
    return 0
  fi

  rm -rf buildx && mkdir -p buildx
  rm -rf fexov
  rm -rf fakeinstall
  rm -rf ${pkgdir:?}/*

  # Work around meson cross-build issue (32-bit build only)
  # https://gitlab.archlinux.org/archlinux/packaging/packages/lib32-mesa/-/blob/1-24.3.3-2/PKGBUILD?ref_type=tags#L189
  # https://bugs.gentoo.org/939803
  # https://gitweb.gentoo.org/repo/gentoo.git/commit/?id=f3caa4db8e65ccf767a5b0b893ca3a28c1e39bea
  # https://github.com/Frogging-Family/mesa-git/pull/50
  export BINDGEN_EXTRA_CLANG_ARGS="-m32"

  CFLAGS+=' -g1 -m32 -march=i686'
  CXXFLAGS+=' -g1 -m32 -march=i686'
  CROSS='--cross-file=../cross_x86'
  LIBDIR=lib32
  TEFLON='false'
  GLX_READ_ONLY_TEXT='true'
  BUILDDIR=buildx

  meson_build

  create_overlay mesa-i386.erofs
  install -Dpm0644 -t ${pkgdir}/usr/share/fex-emu/overlays/ mesa-i386.erofs

  install -Dpm0755 -t ${pkgdir}/usr/share/doc/mesa-asahi-fex-emu-overlay-i386/ Mesa-MLAA-License-Clarification-Email.txt
}

package_mesa-asahi-dummy() {
  arch=(any)
  provides=(
    'mesa' 'lib32-mesa'
    'opengl-driver' 'lib32-opengl-driver'
    'vulkan-driver' 'lib32-vulkan-driver'
    'mesa-libgl' 'lib32-mesa-libgl'
    'vulkan-swrast' 'lib32-vulkan-swrast'
    'opencl-driver' 'lib32-opencl-driver'
    'opencl-rusticl-mesa' 'lib32-opencl-rusticl-mesa'
    'vulkan-virtio' 'lib32-vulkan-virtio'
  )
  #makedepends=() # not allowed to set here
  depends=()
  optdepends=()
}
